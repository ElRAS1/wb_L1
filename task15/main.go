// К каким негативным последствиям может привести данный фрагмент кода, и как это исправить?

// глобальные перменные храняться в статической памяти и они будут сохраняться на протежении всего времени выполнения программы
// это не эффективный подход + эта переменная будет видна во всех функциях и это может привести к неожиданному результату так как эту переменную может изменить одна из функций
// в целом, рекомендуется избегать использования глобальных переменных, если это возможно, особенно если мы там хотим хранить очень большую строку
// это замедлит время выполнение программы
// var justString string

// func someFunc() {
//   v := createHugeString(1 << 10)
//   justString = v[:100] тут будет ошибка если строка будет меньше
// }

// func main() {
//   someFunc()
// }

// Приведите корректный пример реализации.
package main

func createHugeString(size int) string {
	return "XCdzvgbvcsvsvcjnfajkcfhahxaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafajckhaxjkhgaxhx" // Пример строки
}

func someFunc() {
	// я бы использовал байтовый срез чтобы хранить часть строки
	v := createHugeString(1 << 10)
	justStr := make([]byte, 100) // создадим байтовый срез для с размером 100 байт чтобы у нас не было ошибки если строка меньше 100 символов
	// так же после этого v удалиться сборщиком мусора так как уже не будет использовать и мы не будем хранить в памяти лишнюю переменную
	copy(justStr, v[:100])
	// дальше можем работать с этим justStr...
}

func main() {
	someFunc()
}
