/*
Реализовать постоянную запись данных в канал (главный поток).
Реализовать набор из N воркеров, которые читают произвольные данные из канала и выводят в stdout.
Необходима возможность выбора количества воркеров при старте.
Программа должна завершаться по нажатию Ctrl+C. Выбрать и обосновать способ завершения работы всех воркеров.
*/

package main

import (
	"fmt"
	"math/rand"
	"os"
	"os/signal"
	"syscall"
)

func main() {
	wr := 0
	// создаем канал для записи значений
	ch := make(chan int)
	fmt.Print("Введите количество воркеров: ")
	fmt.Scan(&wr)
	// создаем канал отлавливания сигналов
	sig := make(chan os.Signal, 1)
	// указаваем какие сигналы нужно перехватить
	signal.Notify(sig, syscall.SIGINT, syscall.SIGTERM)

	// создаем функцию которая запсывает рандомные числа в канал. При получении сигнала ctrl + c закрывает канал и выходит.
	worker := func(sig chan os.Signal, ch chan int) {
		for {
			select {
			case ch <- rand.Int():
			case <-sig:
				close(ch)
				return
			}
		}
	}

	// запускаем в отдельной горутине каждый воркер количество которых указал пользователь
	for i := 0; i < wr; i++ {
		go worker(sig, ch)
	}

	// читаем из канала
	for i := range ch {
		fmt.Println(i)
	}

}
