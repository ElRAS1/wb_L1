// Реализовать быструю сортировку массива (quicksort) встроенными методами языка.

package main

import (
	"fmt"
	"math/rand"
)

func main() {

	mas := make([]int, 15)

	for i := range mas {
		mas[i] = rand.Intn(25)
	}

	fmt.Printf("Исходный слайс = %v\n", mas)

	quickSort(mas, 0, len(mas)-1)

	fmt.Printf("Отсортированный слайс = %v\n", mas)

}

func quickSort(sl []int, left int, right int) {

	// left явялеться индексом первого элемента слайса а right последнего
	// в процессе left увеличиваеться а right уменьшаеться
	// когда left станет больше значит массив отсортирован и нам нужно выйти
	if left > right {
		return
	}

	// присвоим индексы начала и конца диапазона, который нужно отсортировать
	i := left
	j := right

	// вычисляем опорный элемент путем нахождения среднего индекса слайса
	p := sl[(left+right)/2]

	// цикл for будет продолжатся пока i не будет больше j
	for i <= j {

		// будем увеличивать i пока не не найдем элемент слайса который больше опорного элемента
		for sl[i] < p {
			i++
		}

		// будем уменьшать j пока не не найдем элемент слайса который меньше опорного элемента
		for sl[j] > p {
			j--
		}
		if i <= j {
			// потом в левую часть слайса отправляем меньший элемент а в правую больший
			sl[i], sl[j] = sl[j], sl[i]
			i++
			j--
		}
	}
	// рекурсивно вывзываем функция для левой части слайса и правой
	quickSort(sl, left, j)
	quickSort(sl, i, right)
}
